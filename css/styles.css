
body {
    font-family:'M PLUS 1', Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: white;
}

.navbar {
    display: flex; /* Use flexbox for alignment */
    justify-content: space-between; /* Space between logo and links */
    align-items: center; /* Center items vertically */
    background-color: #68A014; /* Dark background */
    padding: 15px; /* Padding around navbar */
    font-family: 'M PLUS 1';
}

.logo img {
    height: 40px; /* Adjust logo size */
    border-radius:6px;
}

.nav-links {
    display: flex; /* Align links in a row */
    border-radius:6px;

}

.nav-links a {
    color: #F2F2F2; /* White text color */
    text-align: center; /* Centered text */
    padding: 14px 20px; /* Padding */
    text-decoration: none; /* Remove underline */
    border-radius:6px;

}

.nav-links a:hover {
    background-color: #ddd; /* Light background on hover */
    color: black; /* Black text on hover */
}


main section {
    padding: 20px; /* Add some padding */
    margin: 20px 0; /* Add margin between sections */
    background-color: #f9f9f9; /* Light background color */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}

main section h2 {
    color: #000000; /* Darker color for headings */
    font-family: 'M PLUS 1';
    text-align: center;

}


.m-plus-1-font {
  font-family: "M PLUS 1", sans-serif;
  font-optical-sizing: auto;
  font-weight: 100;
  font-style: normal;
}

.integrante {
    flex: 1;
    background-color: white; /* Background color of the box */
    padding: 20px; /* Space inside the box */
    margin: 20px; /* Space outside the box */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Shadow effect */
    text-align: center;
}
.integrante img{
    max-width: 120;
    max-height: 200px; /* Maintain aspect ratio */
    border-radius: 5px; /* Optional: rounded corners for images */
}
.integrante p{
    text-align: justify;
    font-size: 14px;
}
.container-integrantes {
    display: flex; /* Use flexbox */
    justify-content: space-between; /* Space elements evenly */
    flex-wrap: wrap; /* Allow wrapping if needed */
}


.container {
    width: 90%;
    max-width: 1440px;
    margin: 0 auto;
    padding: 20px;
}

/* Success Cases */
#success {
    background-color: #ffffff;
    padding: 60px 0;
    text-align: center;
}

#success h2 {
    font-size: 2.5rem;
    margin-bottom: 40px;
}

.case {
    background-color: #fff;
    padding: 20px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
    max-width: 700px;
    margin: 10px auto;
    text-align: left;
}

.case h3 {
    color: #000000;
    font-size: 1.5rem;
    margin-bottom: 10px;
    text-align: center;
}

.case img {
    display: block;
    margin: 20px auto; 
    max-width: 100%;    
    height: auto;   
    border-radius: 10px;
}
/* Footer */
footer {
    background-color: #333;
    color: white;
    padding: 20px 0;
    text-align: center;
}

footer a {
    color: #68A014;
    text-decoration: none;
    margin: 0 10px;
}

footer a:hover {
    text-decoration: underline;
}
$mq-breakpoints: (tn: 384, xxs: 480, xs: 576, sm: 768, md: 992,
        lg: 1200, xl: 1400, xxl: 1920, xxxl: 3000, max: 100000);

@function breakpoint-max($name, $breakpoints: $mq-breakpoints) {
  $max: map-get($breakpoints, $name);
  @return if($max and $max > 0, $max - 1, null);
}

@function breakpoint-min($name, $breakpoints: $mq-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@mixin tn {
  $max: breakpoint-max(tn, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin xxs {
  $max: breakpoint-max(xxs, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin xs {
  $max: breakpoint-max(xs, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin sm {
  $max: breakpoint-max(sm, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin md {
  $max: breakpoint-max(md, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin lg {
  $max: breakpoint-max(lg, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin xl {
  $max: breakpoint-max(xl, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin xxl {
  $max: breakpoint-max(xxl, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin xxxl {
  $max: breakpoint-max(xxxl, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin max {
  $max: breakpoint-max(max, $mq-breakpoints);
  @media(max-width: #{$max}px) {
    @content;
  }
}

@mixin mq-down($name, $breakpoints: $mq-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: #{$max}px) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin mq-between($lower, $upper, $breakpoints: $mq-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @media (min-width: #{$min}px) and (max-width: #{$max}px) {
    @content;
  }
}


